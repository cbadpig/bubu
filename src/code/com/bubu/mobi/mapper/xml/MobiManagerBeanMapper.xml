<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="code.com.bubu.mobi.mapper.dao.MobiManagerMapper">
  <!--<resultMap id="BaseResultMap" type="code.com.bubu.mobi.bean.MobiManager">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="iphone" jdbcType="INTEGER" property="iphone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="alias" jdbcType="VARCHAR" property="alias" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, email, iphone, password, ip, alias, type, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_mobi_manager
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_mobi_manager
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="code.com.bubu.mobi.bean.MobiManager">
    insert into t_mobi_manager (id, email, iphone, 
      password, ip, alias, 
      type, status)
    values (#{id,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{iphone,jdbcType=INTEGER}, 
      #{password,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{alias,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="code.com.bubu.mobi.bean.MobiManager">
    insert into t_mobi_manager
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="iphone != null">
        iphone,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="alias != null">
        alias,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="iphone != null">
        #{iphone,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="alias != null">
        #{alias,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="code.com.bubu.mobi.bean.MobiManager">
    update t_mobi_manager
    <set>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="iphone != null">
        iphone = #{iphone,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="alias != null">
        alias = #{alias,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="code.com.bubu.mobi.bean.MobiManager">
    update t_mobi_manager
    set email = #{email,jdbcType=VARCHAR},
      iphone = #{iphone,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      alias = #{alias,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>-->
</mapper>